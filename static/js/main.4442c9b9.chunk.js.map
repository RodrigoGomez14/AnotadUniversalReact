{"version":3,"sources":["logo.svg","Components/JugadorChinchon.js","Components/Menu.js","Pages/Chinchon.js","Components/JugadorEscoba.js","Pages/Escoba.js","Components/JugadorGenerala.js","Pages/Generala.js","Pages/Chorizo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","JugadorChinchon","puntajesArr","this","state","puntajes","push","parseInt","prompt","setState","eliminado","sumaPuntaje","map","puntaje","alert","nombre","react_default","a","createElement","className","props","Component","Menu","react_router_dom","to","type","Chinchon","ganador","undefined","input","jugadores","document","getElementById","value","arrayJugadores","_this2","confirmAlert","customUI","_ref","onClose","id","onChange","e","target","placeholder","onClick","agregarJugador","length","_this3","_ref2","reiniciarMarcadores","history","goBack","_this4","_ref3","jugador","finalizarMano","newJugadores","newJugador","finDelJuego","jugadoresEliminados","console","log","newArray","_this5","react","Components_JugadorChinchon","alertPuntajes","alertGanador","alertAgregarJugador","JugadorEscoba","gano","Escoba","name","sumaParcial","getElementsByName","checked","_this6","Components_JugadorEscoba","JugadorGenerala","Generala","Components_JugadorGenerala","Chorizo","puntosExtra","alertPuntosExtra","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4442c9b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React , {Component} from \"react\"\r\nimport './styles/Jugador.css'\r\nclass JugadorChinchon extends Component{\r\n    agregarPuntaje(){\r\n        let puntajesArr= this.state.puntajes\r\n        puntajesArr.push(parseInt(prompt('Ingresar Nueva Puntuacion')))\r\n        this.setState(\r\n            {\r\n                puntajes:puntajesArr\r\n            }\r\n        )\r\n    }\r\n    mostrarPuntajeActual(){\r\n        if(this.state.eliminado){\r\n            let sumaPuntaje=0\r\n            this.state.puntajes.map(puntaje=>{\r\n                sumaPuntaje+=puntaje\r\n            })\r\n            this.setState({\r\n                sumaPuntaje:sumaPuntaje\r\n            })\r\n            if(sumaPuntaje>100){\r\n                alert(this.state.nombre+' Eliminado!')\r\n                this.setState({\r\n                    eliminado:true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col text-center p-4\">\r\n                <div className=\"container bg-dark jugador\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h2>{this.props.nombre}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.props.puntajes.map(puntaje=>(\r\n                            <div className=\"col-12 text-center\">\r\n                                <h3>\r\n                                    {puntaje}\r\n                                </h3>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-center\">\r\n                            {this.props.eliminado?\r\n                            <div>\r\n                                <h1 className='eliminado'>{this.props.sumaPuntaje}</h1>\r\n                            </div>\r\n                            :\r\n                            <h1>{this.props.sumaPuntaje}</h1>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default JugadorChinchon","import React , {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport JugadorChinchon from './JugadorChinchon'\r\nimport './styles/Menu.css'\r\nclass Menu extends Component{\r\n    render(){\r\n        return(\r\n            <div className='container-fluid bg-dark pt-4 menu'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Chinchon'>\r\n                            <button type='button' className='btn btn-success'>ChinChon</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Truco'>\r\n                            <button type='button' className='btn btn-success'>Truco</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Chancho'>\r\n                            <button type='button' className='btn btn-success'>Chancho</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Escoba'>\r\n                            <button type='button' className='btn btn-success'>Escoba</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Chorizo'>\r\n                            <button type='button' className='btn btn-success'>Chorizo</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Generala'>\r\n                            <button type='button' className='btn btn-success'>Generala</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Burako'>\r\n                            <button type='button' className='btn btn-success'>Burako</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Rummy'>\r\n                            <button type='button' className='btn btn-success'>Rummy</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Jodete'>\r\n                            <button type='button' className='btn btn-success'>Jodete</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Uno'>\r\n                            <button type='button' className='btn btn-success'>Uno</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Diezmil'>\r\n                            <button type='button' className='btn btn-success'>Diezmil</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-6 form-group text-center\">\r\n                        <Link to='/Generico'>\r\n                            <button type='button' className='btn btn-success'>Generico</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Menu","import React , {Component,Fragment} from \"react\"\r\nimport JugadorChinchon from \"../Components/JugadorChinchon\";\r\nimport './styles/Chinchon.css'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nclass Chinchon extends Component{\r\n    state={\r\n        ganador:undefined,\r\n        input:undefined,\r\n        jugadores:[\r\n        ]\r\n    }\r\n    agregarJugador(){\r\n        document.getElementById(\"nuevoJugador\").value=''\r\n        this.setState({\r\n            input:undefined\r\n        })\r\n        if(this.state.input){\r\n                let arrayJugadores= this.state.jugadores\r\n            arrayJugadores.push({\r\n                nombre:this.state.input,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n                eliminado:false\r\n            })\r\n            this.setState({\r\n                jugadores:arrayJugadores\r\n            })\r\n        }\r\n    }\r\n    alertAgregarJugador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar nuevo jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 offset-3 text-center form-group\">\r\n                                <input type=\"text\" id='nuevoJugador' value={this.state.input} onChange={e=>{\r\n                                    this.setState({\r\n                                        input:e.target.value\r\n                                    })\r\n                                }} className='form-control' placeholder=\"Nombre del Jugador\"/> \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='submit' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        if(this.state.jugadores.length===4){ \r\n                                            onClose()\r\n                                        }\r\n                                    }}> Agregar Jugador</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        onClose()\r\n                                    }}> Listo!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertGanador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{this.state.ganador} ha ganado el partido!</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col text-center\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.reiniciarMarcadores()\r\n                                        onClose()\r\n                                    }}> Repetir Partido</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.props.history.goBack()\r\n                                        onClose()\r\n                                    }}> Salir</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertPuntajes(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Ingresar el puntaje de Cada Jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    (jugador.sumaPuntaje>100?\r\n                                    null\r\n                                    :\r\n                                    <div className=\"col-6 offset-3 text-center form-group\">\r\n                                        <input type=\"number\" id={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                    )\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.finalizarMano()\r\n                                        onClose()\r\n                                    }}> finalizar Mano!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    finalizarMano(){\r\n        let newJugadores=this.state.jugadores\r\n        this.state.jugadores.map(jugador=>{\r\n            if(!jugador.eliminado){\r\n                let newJugador= jugador\r\n                let input=parseInt(document.getElementById(jugador.nombre).value)\r\n                if(!input){\r\n                    input=0\r\n                }\r\n                newJugador.puntajes.push(input)\r\n                newJugador.sumaPuntaje+=input\r\n                if(newJugador.sumaPuntaje>100){\r\n                    newJugador.eliminado=true\r\n                }\r\n            }\r\n        })\r\n        this.setState({\r\n            jugadores:newJugadores\r\n        })\r\n        this.finDelJuego()\r\n    }\r\n    finDelJuego(){\r\n        let jugadoresEliminados=0\r\n        let ganador=undefined\r\n        this.state.jugadores.map(jugador=>{\r\n            if(jugador.eliminado){\r\n                jugadoresEliminados++\r\n            }\r\n            else{\r\n                ganador=jugador.nombre\r\n            }\r\n        })\r\n        console.log(this.state.jugadores.length)\r\n        if(jugadoresEliminados===this.state.jugadores.length-1){\r\n            this.setState({\r\n                ganador:ganador\r\n            })\r\n        }\r\n    }\r\n    reiniciarMarcadores(){\r\n        const jugadores = this.state.jugadores\r\n        let newArray=[]\r\n        jugadores.map(jugador=>{\r\n            newArray.push({\r\n                nombre:jugador.nombre,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n                eliminado:false\r\n            })\r\n        })\r\n        this.setState({\r\n            ganador:undefined,\r\n            jugadores:newArray\r\n        }) \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid pt-4 juego\">\r\n                {this.state.jugadores.length?\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-left\">\r\n                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                this.props.history.goBack()\r\n                            }}>Atras</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row puntaje\">\r\n                        {this.state.jugadores.map(jugador=>(\r\n                            <JugadorChinchon nombre={jugador.nombre} puntajes={jugador.puntajes} sumaPuntaje={jugador.sumaPuntaje} eliminado={jugador.eliminado}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row botonera\">\r\n                        <div className=\"col text-center\">\r\n                            <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertPuntajes()\r\n                            }}>Mano Finalizada!</button>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.ganador?\r\n                    this.alertGanador()\r\n                    :\r\n                    null\r\n                    }\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-left\">\r\n                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                this.props.history.goBack()\r\n                            }}>Atras</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Aun No Hay Jugadores</h1>\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertAgregarJugador()\r\n                            }\r\n                        }>\r\n                            Agregar Jugadores\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Chinchon","import React , {Component} from \"react\"\r\nimport './styles/Jugador.css'\r\nclass JugadorEscoba extends Component{\r\n    agregarPuntaje(){\r\n        let puntajesArr= this.state.puntajes\r\n        puntajesArr.push(parseInt(prompt('Ingresar Nueva Puntuacion')))\r\n        this.setState(\r\n            {\r\n                puntajes:puntajesArr\r\n            }\r\n        )\r\n    }\r\n    mostrarPuntajeActual(){\r\n        if(this.state.eliminado){\r\n            let sumaPuntaje=0\r\n            this.state.puntajes.map(puntaje=>{\r\n                sumaPuntaje+=puntaje\r\n            })\r\n            this.setState({\r\n                sumaPuntaje:sumaPuntaje\r\n            })\r\n            if(sumaPuntaje>100){\r\n                alert(this.state.nombre+' Eliminado!')\r\n                this.setState({\r\n                    eliminado:true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col text-center p-4\">\r\n                <div className=\"container bg-dark jugador\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h2>{this.props.nombre}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.props.puntajes.map(puntaje=>(\r\n                            <div className=\"col-12 text-center\">\r\n                                <h3>\r\n                                    {puntaje}\r\n                                </h3>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-center\">\r\n                            {this.props.gano?\r\n                            <div>\r\n                                <h1 className='gano'>{this.props.sumaPuntaje}</h1>\r\n                            </div>\r\n                            :\r\n                            <h1>{this.props.sumaPuntaje}</h1>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default JugadorEscoba","import React , {Component,Fragment} from \"react\"\r\nimport './styles/Chinchon.css'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport JugadorEscoba from \"../Components/JugadorEscoba\";\r\n\r\nclass Escoba extends Component{\r\n    state={\r\n        ganador:undefined,\r\n        input:undefined,\r\n        jugadores:[\r\n        ]\r\n    }\r\n    componentDidMount(){\r\n        this.alertAgregarJugador()\r\n    }\r\n    agregarJugador(){\r\n        document.getElementById(\"nuevoJugador\").value=''\r\n        this.setState({\r\n            input:undefined\r\n        })\r\n        if(this.state.input){\r\n                let arrayJugadores= this.state.jugadores\r\n            arrayJugadores.push({\r\n                nombre:this.state.input,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n                gano:undefined\r\n            })\r\n            this.setState({\r\n                jugadores:arrayJugadores\r\n            })\r\n        }\r\n    }\r\n    alertAgregarJugador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar nuevo jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 offset-3 text-center form-group\">\r\n                                <input type=\"text\" id='nuevoJugador' value={this.state.input} onChange={e=>{\r\n                                    this.setState({\r\n                                        input:e.target.value\r\n                                    })\r\n                                }} className='form-control' placeholder=\"Nombre del Jugador\"/> \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='submit' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        if(this.state.jugadores.length===4){ \r\n                                            onClose()\r\n                                        }\r\n                                    }}> Agregar Jugador</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        onClose()\r\n                                    }}> Listo!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertGanador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{this.state.ganador} ha ganado el partido!</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col text-center\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.reiniciarMarcadores()\r\n                                        onClose()\r\n                                    }}> Repetir Partido</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.props.history.goBack()\r\n                                        onClose()\r\n                                    }}> Salir</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertPuntajes(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Ingresar las escobas de Cada Jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Escobas</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"number\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Setenta</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Siete De Oro</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Cartas</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Oros</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.finalizarMano()\r\n                                        onClose()\r\n                                    }}> Finalizar Mano!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    finalizarMano(){\r\n        let newJugadores=this.state.jugadores\r\n        this.state.jugadores.map(jugador=>{\r\n            let sumaParcial=0\r\n            let newJugador= jugador\r\n            let puntajes=document.getElementsByName(jugador.nombre)\r\n            sumaParcial+=parseInt(puntajes[0].value)\r\n            if(puntajes[1].checked){\r\n            sumaParcial+=1\r\n            }\r\n            if(puntajes[2].checked){\r\n                sumaParcial+=1\r\n            }\r\n            if(puntajes[3].checked){\r\n                sumaParcial+=1\r\n            }\r\n            if(puntajes[4].checked){\r\n                sumaParcial+=1\r\n            }\r\n            newJugador.puntajes.push(sumaParcial)\r\n            newJugador.sumaPuntaje+=sumaParcial\r\n            if(newJugador.sumaPuntaje>=15){\r\n                newJugador.gano=true\r\n                this.setState({\r\n                    ganador:jugador.nombre\r\n                })\r\n            }\r\n        })\r\n        this.setState({\r\n            jugadores:newJugadores\r\n        })\r\n    }\r\n    reiniciarMarcadores(){\r\n        const jugadores = this.state.jugadores\r\n        let newArray=[]\r\n        jugadores.map(jugador=>{\r\n            newArray.push({\r\n                nombre:jugador.nombre,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n                gano:undefined\r\n            })\r\n        })\r\n        this.setState({\r\n            ganador:undefined,\r\n            jugadores:newArray\r\n        }) \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid pt-4 juego\">\r\n                {this.state.jugadores.length?\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col form-group text-left\">\r\n                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                this.props.history.goBack()\r\n                            }}>Atras</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row puntaje\">\r\n                        {this.state.jugadores.map(jugador=>(\r\n                            <JugadorEscoba nombre={jugador.nombre} puntajes={jugador.puntajes} sumaPuntaje={jugador.sumaPuntaje} gano={jugador.gano}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row botonera\">\r\n                        <div className=\"col text-center\">\r\n                            <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertPuntajes()\r\n                            }}>Mano Finalizada!</button>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.ganador?\r\n                    this.alertGanador()\r\n                    :\r\n                    null\r\n                    }\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col form-group text-left\">\r\n                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                this.props.history.goBack()\r\n                            }}>Atras</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Aun No Hay Jugadores</h1>\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertAgregarJugador()\r\n                            }\r\n                        }>\r\n                            Agregar Jugadores\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Escoba","import React , {Component} from \"react\"\r\nimport './styles/Jugador.css'\r\nclass JugadorGenerala extends Component{\r\n    agregarPuntaje(){\r\n        let puntajesArr= this.state.puntajes\r\n        puntajesArr.push(parseInt(prompt('Ingresar Nueva Puntuacion')))\r\n        this.setState(\r\n            {\r\n                puntajes:puntajesArr\r\n            }\r\n        )\r\n    }\r\n    mostrarPuntajeActual(){\r\n        if(this.state.eliminado){\r\n            let sumaPuntaje=0\r\n            this.state.puntajes.map(puntaje=>{\r\n                sumaPuntaje+=puntaje\r\n            })\r\n            this.setState({\r\n                sumaPuntaje:sumaPuntaje\r\n            })\r\n            if(sumaPuntaje>100){\r\n                alert(this.state.nombre+' Eliminado!')\r\n                this.setState({\r\n                    eliminado:true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col text-center \">\r\n                <div className=\"container bg-dark jugador\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h2>{this.props.nombre}</h2>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default JugadorGenerala","import React , {Component,Fragment} from \"react\"\r\nimport JugadorGenerala from \"../Components/JugadorGenerala\";\r\nimport './styles/Chinchon.css'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nclass Generala extends Component{\r\n    state={\r\n        ganador:undefined,\r\n        input:undefined,\r\n        jugadores:[\r\n        ]\r\n    }\r\n    agregarJugador(){\r\n        document.getElementById(\"nuevoJugador\").value=''\r\n        this.setState({\r\n            input:undefined\r\n        })\r\n        if(this.state.input){\r\n                let arrayJugadores= this.state.jugadores\r\n            arrayJugadores.push({\r\n                nombre:this.state.input,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n            })\r\n            this.setState({\r\n                jugadores:arrayJugadores\r\n            })\r\n        }\r\n    }\r\n    alertAgregarJugador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar nuevo jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 offset-3 text-center form-group\">\r\n                                <input type=\"text\" id='nuevoJugador' value={this.state.input} onChange={e=>{\r\n                                    this.setState({\r\n                                        input:e.target.value\r\n                                    })\r\n                                }} className='form-control' placeholder=\"Nombre del Jugador\"/> \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='submit' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        if(this.state.jugadores.length===4){ \r\n                                            onClose()\r\n                                        }\r\n                                    }}> Agregar Jugador</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        onClose()\r\n                                    }}> Listo!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertGanador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{this.state.ganador} ha ganado el partido!</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col text-center\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.reiniciarMarcadores()\r\n                                        onClose()\r\n                                    }}> Repetir Partido</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.props.history.goBack()\r\n                                        onClose()\r\n                                    }}> Salir</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertPuntajes(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Ingresar el puntaje de Cada Jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    (jugador.sumaPuntaje>100?\r\n                                    null\r\n                                    :\r\n                                    <div className=\"col-6 offset-3 text-center form-group\">\r\n                                        <input type=\"number\" id={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                    )\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.finalizarMano()\r\n                                        onClose()\r\n                                    }}> finalizar Mano!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    finalizarMano(){\r\n        let newJugadores=this.state.jugadores\r\n        this.state.jugadores.map(jugador=>{\r\n            if(!jugador.eliminado){\r\n                let newJugador= jugador\r\n                let input=parseInt(document.getElementById(jugador.nombre).value)\r\n                if(!input){\r\n                    input=0\r\n                }\r\n                newJugador.puntajes.push(input)\r\n                newJugador.sumaPuntaje+=input\r\n                if(newJugador.sumaPuntaje>100){\r\n                    newJugador.eliminado=true\r\n                }\r\n            }\r\n        })\r\n        this.setState({\r\n            jugadores:newJugadores\r\n        })\r\n        this.finDelJuego()\r\n    }\r\n    finDelJuego(){\r\n        let jugadoresEliminados=0\r\n        let ganador=undefined\r\n        this.state.jugadores.map(jugador=>{\r\n            if(jugador.eliminado){\r\n                jugadoresEliminados++\r\n            }\r\n            else{\r\n                ganador=jugador.nombre\r\n            }\r\n        })\r\n        console.log(this.state.jugadores.length)\r\n        if(jugadoresEliminados===this.state.jugadores.length-1){\r\n            this.setState({\r\n                ganador:ganador\r\n            })\r\n        }\r\n    }\r\n    reiniciarMarcadores(){\r\n        const jugadores = this.state.jugadores\r\n        let newArray=[]\r\n        jugadores.map(jugador=>{\r\n            newArray.push({\r\n                nombre:jugador.nombre,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n                eliminado:false\r\n            })\r\n        })\r\n        this.setState({\r\n            ganador:undefined,\r\n            jugadores:newArray\r\n        }) \r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n            <div className=\"container-fluid pt-4 juego\">\r\n                {this.state.jugadores.length?\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                                <div className=\"col text-left\">\r\n                                    <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                        this.props.history.goBack()\r\n                                    }}>Atras</button>\r\n                                </div>\r\n                            </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1\">\r\n                        <div className=\"row puntaje\">\r\n                            <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                            <h2>{this.props.nombre}</h2>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-11\">\r\n                            <div className=\"row puntaje\">\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <JugadorGenerala nombre={jugador.nombre} puntajes={jugador.puntajes} sumaPuntaje={jugador.sumaPuntaje} eliminado={jugador.eliminado}/>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row botonera\">\r\n                                <div className=\"col text-center\">\r\n                                    <button type='button' className='btn btn-success' onClick={e=>{\r\n                                        this.alertPuntajes()\r\n                                    }}>Mano Finalizada!</button>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.ganador?\r\n                            this.alertGanador()\r\n                            :\r\n                            null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-left\">\r\n                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                this.props.history.goBack()\r\n                            }}>Atras</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Aun No Hay Jugadores</h1>\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertAgregarJugador()\r\n                            }\r\n                        }>\r\n                            Agregar Jugadores\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                </Fragment>\r\n                }\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Generala","import React , {Component,Fragment} from \"react\"\r\nimport './styles/Chinchon.css'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport JugadorEscoba from \"../Components/JugadorEscoba\";\r\n\r\nclass Chorizo extends Component{\r\n    state={\r\n        ganador:undefined,\r\n        input:undefined,\r\n        jugadores:[\r\n        ]\r\n    }\r\n    componentDidMount(){\r\n        this.alertAgregarJugador()\r\n    }\r\n    agregarJugador(){\r\n        document.getElementById(\"nuevoJugador\").value=''\r\n        this.setState({\r\n            input:undefined\r\n        })\r\n        if(this.state.input){\r\n                let arrayJugadores= this.state.jugadores\r\n                arrayJugadores.push({\r\n                nombre:this.state.input,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n                puntosExtra:undefined,\r\n                gano:undefined\r\n            })\r\n            this.setState({\r\n                jugadores:arrayJugadores\r\n            })\r\n        }\r\n    }\r\n    alertAgregarJugador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Agregar nuevo jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 offset-3 text-center form-group\">\r\n                                <input type=\"text\" id='nuevoJugador' value={this.state.input} onChange={e=>{\r\n                                    this.setState({\r\n                                        input:e.target.value\r\n                                    })\r\n                                }} className='form-control' placeholder=\"Nombre del Jugador\"/> \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='submit' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        if(this.state.jugadores.length===4){ \r\n                                            onClose()\r\n                                        }\r\n                                    }}> Agregar Jugador</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.agregarJugador()\r\n                                        onClose()\r\n                                    }}> Listo!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertGanador(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>{this.state.ganador} ha ganado el partido!</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col text-center\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.reiniciarMarcadores()\r\n                                        onClose()\r\n                                    }}> Repetir Partido</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.props.history.goBack()\r\n                                        onClose()\r\n                                    }}> Salir</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    alertPuntajes(){\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <div className='custom-ui'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1>Ingresar las escobas de Cada Jugador</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Escobas</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"number\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Setenta</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Siete De Oro</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Cartas</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Oros</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Doce De Oro</h3>\r\n                            </div>\r\n                                {this.state.jugadores.map(jugador=>(\r\n                                    <div className=\"col text-center form-group\">\r\n                                        <input type=\"Checkbox\" name={jugador.nombre} className='form-control' placeholder={jugador.nombre}/> \r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center form-group\">\r\n                                    <button type='button' className='btn btn-outline-success' onClick={e=>{\r\n                                        this.finalizarMano()\r\n                                        onClose()\r\n                                    }}> Finalizar Mano!</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        });\r\n    }\r\n    finalizarMano(){\r\n        let newJugadores=this.state.jugadores\r\n        this.state.jugadores.map(jugador=>{\r\n            let sumaParcial=0\r\n            let newJugador= jugador\r\n            let puntajes=document.getElementsByName(jugador.nombre)\r\n            sumaParcial+=parseInt(puntajes[0].value)\r\n            if(puntajes[1].checked){\r\n            sumaParcial+=1\r\n            }\r\n            if(puntajes[2].checked){\r\n                sumaParcial+=1\r\n            }\r\n            if(puntajes[3].checked){\r\n                sumaParcial+=1\r\n            }\r\n            if(puntajes[4].checked){\r\n                sumaParcial+=1\r\n            }\r\n            if(puntajes[5].checked){\r\n                sumaParcial+=2\r\n            }\r\n            if(jugador.puntosExtra){\r\n                sumaParcial+=parseInt(jugador.puntosExtra)\r\n            }\r\n            newJugador.puntajes.push(sumaParcial)\r\n            newJugador.sumaPuntaje+=sumaParcial\r\n            if(newJugador.sumaPuntaje>=50){\r\n                newJugador.gano=true\r\n                this.setState({\r\n                    ganador:jugador.nombre\r\n                })\r\n            }\r\n        })\r\n        this.setState({\r\n            jugadores:newJugadores\r\n        })\r\n    }\r\n    reiniciarMarcadores(){\r\n        const jugadores = this.state.jugadores\r\n        let newArray=[]\r\n        jugadores.map(jugador=>{\r\n            newArray.push({\r\n                nombre:jugador.nombre,\r\n                puntajes:[],\r\n                sumaPuntaje:0,\r\n                puntosExtra:undefined,\r\n                gano:undefined\r\n            })\r\n        })\r\n        this.setState({\r\n            ganador:undefined,\r\n            jugadores:newArray\r\n        }) \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid pt-4 juego\">\r\n                {this.state.jugadores.length?\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col form-group text-left\">\r\n                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                this.props.history.goBack()\r\n                            }}>Atras</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row puntaje\">\r\n                        {this.state.jugadores.map(jugador=>(\r\n                            <JugadorEscoba nombre={jugador.nombre} puntajes={jugador.puntajes} sumaPuntaje={jugador.sumaPuntaje} gano={jugador.gano}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row botonera\">\r\n                        <div className=\"col-6 text-center\">\r\n                            <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertPuntajes()\r\n                            }}>Mano Finalizada!</button>\r\n                        </div>\r\n                        <div className=\"col-6 text-center\">\r\n                            <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertPuntosExtra()\r\n                            }}>Agregar Puntos Extra!</button>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.ganador?\r\n                    this.alertGanador()\r\n                    :\r\n                    null\r\n                    }\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col form-group text-left\">\r\n                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                this.props.history.goBack()\r\n                            }}>Atras</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Aun No Hay Jugadores</h1>\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                                this.alertAgregarJugador()\r\n                            }\r\n                        }>\r\n                            Agregar Jugadores\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Chorizo","import React from 'react';\nimport logo from './logo.svg';\nimport {Switch,Route,BrowserRouter,} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Menu from \"./Components/Menu\"\nimport Chinchon from \"./Pages/Chinchon\"\nimport Escoba from \"./Pages/Escoba\"\nimport Generala from \"./Pages/Generala\"\nimport Chorizo from \"./Pages/Chorizo\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Menu}/>\n        <Route exact path=\"/Chinchon\" component={Chinchon}/>\n        <Route exact path=\"/Escoba\" component={Escoba}/>\n        <Route exact path=\"/Generala\" component={Generala}/>\n        <Route exact path=\"/Chorizo\" component={Chorizo}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}